{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\David\\\\Desktop\\\\react_app\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\David\\\\Desktop\\\\react_app\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\David\\\\Desktop\\\\react_app\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\David\\\\Desktop\\\\react_app\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\David\\\\Desktop\\\\react_app\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\David\\\\Desktop\\\\react_app\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\react_app\\\\my-app\\\\src\\\\index.js\";\nimport React, { Component } from 'react';\n\nvar DataParser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataParser, _Component);\n\n  function DataParser(props) {\n    var _this;\n\n    _classCallCheck(this, DataParser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataParser).call(this, props));\n    _this.updateData = _this.updateData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DataParser, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var fs = require('fs');\n\n      require.extensions['.cav'] = function (module, filename) {\n        module.exports = fs.readFileSync(filename, 'utf8');\n      };\n\n      var csvFilePath = require(\"./datasets/shorttable.csv\");\n\n      var Papa = require(\"papaparse/papaparse.min.js\");\n\n      Papa.parse(csvFilePath, {\n        header: true,\n        download: true,\n        delimiter: ',',\n        skipEmptyLines: true,\n        complete: this.updateData\n      });\n    }\n  }, {\n    key: \"updateData\",\n    value: function updateData(result) {\n      var data = result.data;\n      this.setState({\n        data: data\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Data\");\n    }\n  }]);\n\n  return DataParser;\n}(Component);\n\nexport default DataParser;","map":{"version":3,"sources":["C:\\Users\\David\\Desktop\\react_app\\my-app\\src\\index.js"],"names":["React","Component","DataParser","props","updateData","bind","fs","require","extensions","module","filename","exports","readFileSync","csvFilePath","Papa","parse","header","download","delimiter","skipEmptyLines","complete","result","data","setState"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,U;;;;;AACF,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,oFAAMA,KAAN;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AAFc;AAGjB;;;;yCAEmB;AAChB,UAAIC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACAA,MAAAA,OAAO,CAACC,UAAR,CAAmB,MAAnB,IAA6B,UAAUC,MAAV,EAAkBC,QAAlB,EAA4B;AACrDD,QAAAA,MAAM,CAACE,OAAP,GAAiBL,EAAE,CAACM,YAAH,CAAgBF,QAAhB,EAA0B,MAA1B,CAAjB;AACH,OAFD;;AAIA,UAAIG,WAAW,GAAGN,OAAO,CAAC,2BAAD,CAAzB;;AACA,UAAIO,IAAI,GAAGP,OAAO,CAAC,4BAAD,CAAlB;;AACAO,MAAAA,IAAI,CAACC,KAAL,CAAWF,WAAX,EAAwB;AACpBG,QAAAA,MAAM,EAAE,IADY;AAEpBC,QAAAA,QAAQ,EAAE,IAFU;AAGpBC,QAAAA,SAAS,EAAE,GAHS;AAIpBC,QAAAA,cAAc,EAAE,IAJI;AAKpBC,QAAAA,QAAQ,EAAE,KAAKhB;AALK,OAAxB;AAOH;;;+BAEUiB,M,EAAO;AACd,UAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;AACA,WAAKC,QAAL,CAAc;AAACD,QAAAA,IAAI,EAAEA;AAAP,OAAd;AACH;;;6BAEO;AACJ,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;;;;EA9BoBrB,S;;AAiCzB,eAAeC,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass DataParser extends Component{\n    constructor(props){\n        super(props);\n        this.updateData = this.updateData.bind(this);\n    }\n\n    componentWillMount(){\n        var fs = require('fs');\n        require.extensions['.cav'] = function (module, filename) {\n            module.exports = fs.readFileSync(filename, 'utf8');\n        };\n\n        var csvFilePath = require(\"./datasets/shorttable.csv\");\n        var Papa = require(\"papaparse/papaparse.min.js\");\n        Papa.parse(csvFilePath, {\n            header: true,\n            download: true,\n            delimiter: ',',\n            skipEmptyLines: true,\n            complete: this.updateData\n        });\n    }\n\n    updateData(result){\n        const data = result.data;\n        this.setState({data: data});\n    }\n\n    render(){\n        return <div>Data</div>\n    }\n}\n\nexport default DataParser;\n"]},"metadata":{},"sourceType":"module"}